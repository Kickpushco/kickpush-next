@use "sass:math";

@import "../../sass/global";

.Main {
  margin-bottom: 0;
  display: flex;
  flex-direction: column;
  flex: 1;
}

.Close {
  position: fixed;
  pointer-events: none;
  top: 0;
  height: var(--nav-height);
  right: calc(var(--gutter) - #{rem(12)});
  z-index: 102;
  display: flex;

  @include min-width($bp-hamburger-menu) {
    top: rem(24);
    right: rem(24);
    height: auto;
  }

  @include min-width($bp-tablet) {
    transition: 200ms ease-in-out;
    transition-property: opacity, transform;

    &-hidden {
      opacity: 0;
      transform: scale(0.8);
    }
  }
}
.CloseButton {
  margin: auto 0;
  pointer-events: auto;
}

.Layer {
  position: relative;
  z-index: 2;
  overflow: hidden;
  flex-grow: 1;

  @include min-width($bp-tablet) {
    min-height: 100vh;
  }

  &-dark {
    --hero-avatar-border: var(--background-color, #{$color-kickpush-white});

    background: $color-kickpush-white;
    color: $color-kickpush-black;
  }

  &-light {
    --hero-avatar-border: var(--background-color, #{$color-kickpush-black});

    background: $color-kickpush-black;
    color: $color-kickpush-white;
  }
}

.Hero {
  text-align: left;
}
.HeroTitle {
  margin-bottom: 0;
}
.HeroContent {
  --hero-avatar-size: #{rem(72)};

  align-items: center;
  margin-top: rem(24); // TODO: Var
  display: grid;
  grid-template-columns: auto 1fr;
  gap: rem(24);

  > :first-child:last-child {
    grid-column: 1 / span 2;
  }
}
.HeroAvatars {
  display: flex;
}
.HeroAvatar {
  background: var(--hero-avatar-border);
  border: rem(5) solid var(--hero-avatar-border);
  width: var(--hero-avatar-size);
  height: var(--hero-avatar-size);
  border-radius: calc(var(--hero-avatar-size) / 2);
  position: relative;
  margin: rem(-4);
  overflow: hidden;

  &:not(:first-child) {
    margin-left: calc(var(--hero-avatar-size) / -2);
  }
}
.HeroCopy {
  @include reveal-animation("copy");
}

// TODO: Abstract this
.Footer {
  --card-shadow-color: #{rgba(black, 0.1)};

  justify-content: center;
  position: relative;
  bottom: 0;
  z-index: 3;
  min-height: 0;
  overflow: visible;
  padding-top: var(--gutter);
  padding-bottom: var(--gutter);

  @include min-width($bp-desktop) {
    padding-top: 0;
    padding-bottom: 0;
    min-height: 100vh;
    z-index: 1;
    position: sticky;
    overflow: hidden;
  }
}
