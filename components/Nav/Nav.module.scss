@use "sass:math";

@import "../../sass/global";

@value breakpointHamburgerMenu: #{em($bp-hamburger-menu)};

.Nav {
  background: $color-kickpush-red;
  position: sticky;
  top: 0;
  margin-top: var(--nav-offset);
  z-index: 99;
  transition: transform math.div($duration-project-show-card, 2) ease-out;

  a,
  button {
    scroll-margin-top: 0;
  }

  &-cardTransitioning {
    transform: translateY(calc(-100% - #{var(--nav-offset)}));
  }
}

.Container {
  display: flex;
  align-items: center;
  justify-content: center;
  max-width: rem(1170);
  height: var(--nav-height);
}

.Logo {
  margin-right: auto;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-left: rem(-14);
  width: rem(111);

  &:focus {
    outline-offset: rem(-2);
  }

  @include min-width($bp-mobile) {
    margin-left: rem(-19);
    width: rem(156);
  }

  svg {
    display: block;
    height: auto;
    width: 100%;
  }
}

$nav-menu-duration: 200ms;

.Menu {
  @keyframes menu-visibility {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }
  @include max-width($bp-hamburger-menu) {
    animation: menu-visibility 200ms $nav-menu-duration ease-in-out both;
  }
}

.Links {
  list-style: none;
  display: flex;
  padding: 0;
  gap: var(--gutter);

  @include max-width($bp-hamburger-menu) {
    --menu-scale: 1.1;

    background: $color-kickpush-red;
    flex-direction: column;
    justify-content: center;
    opacity: 0;
    transform: scale(var(--menu-scale));
    gap: rem(24);
    transition-property: opacity, transform;
    position: fixed;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    min-height: stretch;
    padding: var(--gutter);
    visibility: hidden;
    transition: opacity $nav-menu-duration ease-in,
      transform $nav-menu-duration ease-in, visibility 0ms $nav-menu-duration;

    .Nav-mobileOpen & {
      opacity: 1;
      transform: none;
      transition: opacity $nav-menu-duration ease-out,
        transform $nav-menu-duration ease-out, visiblity 0ms;
      visibility: visible;
    }
  }

  @include no-motion {
    --menu-scale: 1;
  }
}
.Link {
  position: relative;
  text-decoration: none;
  font-weight: $font-weight-medium;
  display: block;
  padding: 0.5em 0.75em;
  overflow: hidden;
  margin: 0 -0.75em;
  border-radius: $border-radius-small;

  @include max-width($bp-hamburger-menu) {
    width: fit-content;
    padding: 0.34em 0.75em;
    margin: 0 auto;
    font-size: rem(32);
    line-height: rem(40);
  }

  > span {
    display: block;
    position: relative;
    padding-bottom: 0.025em;
  }

  &::before {
    background: $color-kickpush-dark-red;
    border-radius: inherit;
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transform: scale(0, 1);
    transform-origin: center right;
    transition: transform 200ms ease-in-out;

    @include high-contrast {
      background-color: $color-kickpush-dark-red-high-contrast;
    }
  }

  &[aria-current],
  &:hover {
    &::before {
      transform: none;
      transition-delay: 100ms;
      transform-origin: center left;
    }
  }
}

.Toggle {
  margin-right: rem(-12);
  position: relative;
  z-index: 2;

  &-closed {
    --button-icon-size: #{rem(16)};

    padding-top: rem(1); // Optically balances the hamburger

    &::before {
      opacity: 0;
    }
  }
}
