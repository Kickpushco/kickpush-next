@use "sass:math";

@import "../../sass/global";

$photos-width: 1069;
$photos-height: 596;

.Heading {
  @include min-width($bp-unstack-cards) {
    width: 50%;
  }
}

.Photos {
  aspect-ratio: #{$photos-width} / #{$photos-height};
  position: relative;
  transform: rotate(-15deg);
  width: 210%;
  margin-top: 5%;
  margin-left: -20%;
  align-self: flex-end;

  @include min-width($bp-unstack-cards) {
    position: absolute;
    top: 0;
    left: 36%;
    width: 132%;
    margin-top: -18%;
    margin-left: -37%;
    transform-origin: right top;
  }

  @include min-width($bp-tablet) {
    left: 36%;
    width: 120%;
  }
}
.PhotosLayer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transition: transform $duration-card-image-out ease-in-out;

  a:hover &,
  a:focus & {
    transition: transform $duration-card-image-in ease-out;
    transform: scale(var(--photo-transform, 0.975));
  }

  &:nth-of-type(1) {
    --photo-top: 140;
  }

  &:nth-of-type(2) {
    --photo-top: 221;
    --photo-left: 343;
    --photo-transform: 1.025;

    z-index: 2;
  }

  &:nth-of-type(3) {
    --photo-left: 451;
  }

  &:nth-of-type(4) {
    --photo-left: 634;
    --photo-top: 331;
    --photo-transform: 1.1;

    z-index: 2;

    @include max-width($bp-unstack-cards) {
      display: none;
    }
  }
}
.Photos picture {
  aspect-ratio: 403 / 263;
  background: $color-kickpush-dark-red;
  box-shadow: rgba($color-kickpush-dark-red, 0.4) 0 rem(20) rem(30) 0;
  border-radius: $border-radius-small;
  width: math.div(403, $photos-width) * 100%;
  top: calc(var(--photo-top) / #{$photos-height} * 100%);
  left: calc(var(--photo-left) / #{$photos-width} * 100%);
  height: auto;
  z-index: 1;
}
